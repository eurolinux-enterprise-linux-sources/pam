diff -up Linux-PAM-1.1.1/modules/pam_tally2/pam_tally2.c.debug Linux-PAM-1.1.1/modules/pam_tally2/pam_tally2.c
--- Linux-PAM-1.1.1/modules/pam_tally2/pam_tally2.c.debug	2015-08-04 15:54:38.000000000 +0200
+++ Linux-PAM-1.1.1/modules/pam_tally2/pam_tally2.c	2016-01-07 17:23:16.396749868 +0100
@@ -128,6 +128,7 @@ struct tally_options {
    authentication stuck with lockf locked, do not use it unless you know
    what you're doing. Use pam_faillock instead. */
 #define OPT_NO_LOCKF_TIMEOUT           02000
+#define OPT_DEBUG                      04000
 
 #define MAX_LOCK_WAITING_TIME 10
 
@@ -200,6 +201,9 @@ tally_parse_args(pam_handle_t *pamh, str
       else if ( ! strcmp( *argv, "serialize" ) ) {
         opts->ctrl |= OPT_SERIALIZE;
       }
+      else if ( ! strcmp( *argv, "debug" ) ) {
+        opts->ctrl |= OPT_DEBUG;
+      }
       else if ( ! strcmp( *argv, "even_deny_root_account" ) ||
                 ! strcmp( *argv, "even_deny_root" ) ) {
 	log_phase_no_auth(pamh, phase, *argv);
@@ -517,6 +521,7 @@ tally_check (tally_t oldcnt, time_t oldt
 	     struct tallylog *tally)
 {
     int rv = PAM_SUCCESS;
+    int loglevel = LOG_DEBUG;
 #ifdef HAVE_LIBAUDIT
     char buf[64];
     int audit_fd = -1;
@@ -589,11 +594,7 @@ tally_check (tally_t oldcnt, time_t oldt
             pam_info(pamh, _("Account locked due to %u failed logins"),
 		    (unsigned int)tally->fail_cnt);
         }
-	if (!(opts->ctrl & OPT_NOLOGNOTICE)) {
-            pam_syslog(pamh, LOG_NOTICE,
-                   "user %s (%lu) tally %hu, deny %hu",
-		   user, (unsigned long)uid, tally->fail_cnt, opts->deny);
-	}
+	loglevel = LOG_NOTICE;
         rv = PAM_AUTH_ERR;                 /* Only unconditional failure   */
         goto cleanup;
     }
@@ -623,6 +624,11 @@ tally_check (tally_t oldcnt, time_t oldt
     }
 
 cleanup:
+    if (!(opts->ctrl & OPT_NOLOGNOTICE) && (loglevel != LOG_DEBUG || opts->ctrl & OPT_DEBUG)) {
+        pam_syslog(pamh, loglevel,
+            "user %s (%lu) tally %hu, deny %hu",
+            user, (unsigned long)uid, tally->fail_cnt, opts->deny);
+    }
 #ifdef HAVE_LIBAUDIT
     if (audit_fd != -1) {
         close(audit_fd);
diff -up Linux-PAM-1.1.1/modules/pam_tally2/pam_tally2.8.xml.debug Linux-PAM-1.1.1/modules/pam_tally2/pam_tally2.8.xml
--- Linux-PAM-1.1.1/modules/pam_tally2/pam_tally2.8.xml.debug	2009-06-16 09:35:10.000000000 +0200
+++ Linux-PAM-1.1.1/modules/pam_tally2/pam_tally2.8.xml	2016-01-07 17:24:25.597305926 +0100
@@ -54,6 +54,9 @@
       <arg choice="opt">
         no_log_info
       </arg>
+      <arg choice="opt">
+        debug
+      </arg>
     </cmdsynopsis>
     <cmdsynopsis id="pam_tally2-cmdsynopsis2">
       <command>pam_tally2</command>
@@ -169,6 +172,16 @@
                 </para>
               </listitem>
             </varlistentry>
+            <varlistentry>
+              <term>
+                <option>debug</option>
+              </term>
+              <listitem>
+                <para>
+                  Always log tally count when it is incremented as a debug level message to the system log.
+                </para>
+              </listitem>
+            </varlistentry>
           </variablelist>
         </listitem>
       </varlistentry>
