diff -up Linux-PAM-1.1.1/modules/pam_env/pam_env.c.envfixes Linux-PAM-1.1.1/modules/pam_env/pam_env.c
--- Linux-PAM-1.1.1/modules/pam_env/pam_env.c.envfixes	2012-07-19 14:37:25.000000000 +0200
+++ Linux-PAM-1.1.1/modules/pam_env/pam_env.c	2012-10-15 09:28:53.236687967 +0200
@@ -100,7 +100,7 @@ _pam_parse (const pam_handle_t *pamh, in
 	if (!strcmp(*argv,"debug"))
 	    ctrl |= PAM_DEBUG_ARG;
 	else if (!strncmp(*argv,"conffile=",9)) {
-	  if (*argv+9 == '\0') {
+	  if ((*argv)[9] == '\0') {
 	    pam_syslog(pamh, LOG_ERR,
 		       "conffile= specification missing argument - ignored");
 	  } else {
@@ -108,7 +108,7 @@ _pam_parse (const pam_handle_t *pamh, in
 	    D(("new Configuration File: %s", *conffile));
 	  }
 	} else if (!strncmp(*argv,"envfile=",8)) {
-	  if (*argv+8 == '\0') {
+	  if ((*argv)[8] == '\0') {
 	    pam_syslog (pamh, LOG_ERR,
 			"envfile= specification missing argument - ignored");
 	  } else {
@@ -116,7 +116,7 @@ _pam_parse (const pam_handle_t *pamh, in
 	    D(("new Env File: %s", *envfile));
 	  }
 	} else if (!strncmp(*argv,"user_envfile=",13)) {
-	  if (*argv+13 == '\0') {
+	  if ((*argv)[13] == '\0') {
 	    pam_syslog (pamh, LOG_ERR,
 			"user_envfile= specification missing argument - ignored");
 	  } else {
@@ -288,6 +288,7 @@ static int _assemble_line(FILE *f, char
     char *p = buffer;
     char *s, *os;
     int used = 0;
+    int whitespace;
 
     /* loop broken with a 'break' when a non-'\\n' ended line is read */
 
@@ -310,8 +311,10 @@ static int _assemble_line(FILE *f, char
 
 	/* skip leading spaces --- line may be blank */
 
-	s = p + strspn(p, " \n\t");
+	whitespace = strspn(p, " \n\t");
+	s = p + whitespace;
 	if (*s && (*s != '#')) {
+	    used += whitespace;
 	    os = s;
 
 	    /*
@@ -565,6 +568,7 @@ static int _expand_arg(pam_handle_t *pam
 	D(("Variable buffer overflow: <%s> + <%s>", tmp, tmpptr));
 	pam_syslog (pamh, LOG_ERR, "Variable buffer overflow: <%s> + <%s>",
 		 tmp, tmpptr);
+	return PAM_BUF_ERR;
       }
       continue;
     }
@@ -626,6 +630,7 @@ static int _expand_arg(pam_handle_t *pam
 	    D(("Variable buffer overflow: <%s> + <%s>", tmp, tmpptr));
 	    pam_syslog (pamh, LOG_ERR,
 			"Variable buffer overflow: <%s> + <%s>", tmp, tmpptr);
+	    return PAM_BUF_ERR;
 	  }
 	}
       }           /* if ('{' != *orig++) */
@@ -637,6 +642,7 @@ static int _expand_arg(pam_handle_t *pam
 	D(("Variable buffer overflow: <%s> + <%s>", tmp, tmpptr));
 	pam_syslog(pamh, LOG_ERR,
 		   "Variable buffer overflow: <%s> + <%s>", tmp, tmpptr);
+	return PAM_BUF_ERR;
       }
     }
   }              /* for (;*orig;) */
